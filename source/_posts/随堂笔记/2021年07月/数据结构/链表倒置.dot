
// // 原来的链表
// digraph link{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   n1 [label="{1|n2}"];
//   n2 [label="{2|n3}"];
//   n3 [label="{3|n4}"];
//   n4 [label="{4|n5}"];
//   n5 [label="{5|null}"]
//   head -> n1;

//   n1 -> n2;
//   n2 -> n3;
//   n3 -> n4;
//   n4 -> n5;
// }

// // 创建新链表的头指针和尾指针
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse] [color="red"]
//   newTail [shape=ellipse] [color="red"]
//   secondToLast [shape=ellipse]  [color="red"]
//   last [shape=ellipse]  [color="red"]
//   n1 [label="{1|n2}"];
//   n2 [label="{2|n3}"];
//   n3 [label="{3|n4}"];
//   n4 [label="{4|n5}"];
//   n5 [label="{5|null}"]
//   newHead -> null  [color="red"]
//   newTail -> null  [color="red"]
//   secondToLast -> null  [color="red"]
//   last -> null  [color="red"]
//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
//   n3 -> n4;
//   n4 -> n5;
// }


// // 查找出链表中的倒数第2个节点。
// // 并通过倒数第2个节点得到倒数第1个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"];
//   n2 [label="{2|n3}"];
//   n3 [label="{3|n4}"];
//   n4 [label="{4|n5}"];
//   n5 [label="{5|null}"]
//   newHead -> null
//   newTail -> null
//   secondToLast -> n4 [color="red"]
//   last -> n5 [color="red"]

//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
//   n3 -> n4;
//   n4 -> n5;
// }


// // 断开原来链表中尾节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]  [color="blue"]
//   n1 [label="{1|n2}"];
//   n2 [label="{2|n3}"];
//   n3 [label="{3|n4}"];
//   n4 [label="{4|null}"] [color="purple"]
//   n5 [label="{5|null}"] [color="blue"]
//   newHead -> null
//   newTail -> null
//   secondToLast -> n4
//   last -> n5  [color="blue"]

//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
//   n3 -> n4;
// }


// // 原来链表中的尾节点作为新链表的头节点以及尾节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"];
//   n2 [label="{2|n3}"];
//   n3 [label="{3|n4}"];
//   n4 [label="{4|null}"]
//   n5 [label="{5|null}"]
//   newHead -> n5 [color="red"]
//   newTail -> n5 [color="red"]
//   secondToLast -> n4
//   last -> n5

//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
//   n3 -> n4;
// }



// // 再次查找出旧链表的倒数第二个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"];
//   n2 [label="{2|n3}"];
//   n3 [label="{3|n4}"];
//   n4 [label="{4|null}"]
//   n5 [label="{5|null}"]
//   newHead -> n5
//   newTail -> n5
//   secondToLast -> n3 [color="red"]
//   last -> n4 [color="red"]

//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
//   n3 -> n4;
// }

// // 断开旧链表的最后一个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse] [color="blue"]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|n3}"]
//   n3 [label="{3|null}"] [color="purple"]
//   n4 [label="{4|null}"] [color="blue"]
//   n5 [label="{5|null}"]
//   newHead -> n5
//   newTail -> n5
//   secondToLast -> n3
//   last -> n4 [color="blue"]

//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
// }


// // 摘下的节点连接到新链表的尾部
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|n3}"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|null}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n5
//   n5 -> n4  [color="red"]
//   secondToLast -> n3
//   last -> n4
//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
// }

// // 新插入的节点作为新链表的尾节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|n3}"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|null}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n4 [color="red"]
//   n5 -> n4
//   secondToLast -> n3
//   last -> n4
//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
// }



// // 查找旧链表中倒数第二个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|n3}"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|null}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n4
//   n5 -> n4
//   secondToLast -> n2 [color="red"]
//   last -> n3 [color="red"]
//   head -> n1;
//   n1 -> n2;
//   n2 -> n3;
// }


// // 查找旧链表中倒数第二个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse] [color="blue"]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|null}"] [color=" "]
//   n3 [label="{3|null}"] [color="blue"]
//   n4 [label="{4|null}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n4
//   n5 -> n4
//   secondToLast -> n2
//   last -> n3 [color="blue"]
//   head -> n1;
//   n1 -> n2;
// }


// // 摘下的节点连接到新链表的尾部
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|null}"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|n3}"] [color="orange"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n4
//   n5 -> n4
//   n4 ->n3 [color="red"]
//   secondToLast -> n2
//   last -> n3
//   head -> n1;
//   n1 -> n2;
// }

// // 新节点作为尾节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|null}"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n3 [color="red"]
//   n5 -> n4
//   n4 ->n3
//   secondToLast -> n2
//   last -> n3
//   head -> n1;
//   n1 -> n2;
// }


// // 查找链表中倒数第2个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|n2}"]
//   n2 [label="{2|null}"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n3
//   n5 -> n4
//   n4 ->n3
//   secondToLast -> n1 [color="red"]
//   last -> n2  [color="red"]
//   head -> n1;
//   n1 -> n2;
// }


// // 断开旧链表中最后一个节点，
// // 摘下旧链表中的最后一个节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse] [color="blue"]
//   n1 [label="{1|null}"] [color="purple"]
//   n2 [label="{2|null}"] [color="blue"]
//   n3 [label="{3|null}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n3
//   n5 -> n4
//   n4 ->n3
//   secondToLast -> n1
//   last -> n2 [color="blue"]
//   head -> n1;
// }

// // 新节点连接到新链表的尾部
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|null}"]
//   n2 [label="{2|null}"]
//   n3 [label="{3|n2}"] [color="orange"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n3
//   n5 -> n4
//   n4 -> n3
//   n3 -> n2 [color="red"]
//   secondToLast -> n1
//   last -> n2
//   head -> n1;
// }

// // 新节点作为新链表的尾节点
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|null}"]
//   n2 [label="{2|null}"]
//   n3 [label="{3|n2}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n2 [color="red"]
//   n5 -> n4
//   n4 -> n3
//   n3 -> n2
//   secondToLast -> n1
//   last -> n2
//   head -> n1;
// }


// // 倒数第1，倒数第2指针置空
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|null}"]
//   n2 [label="{2|null}"]
//   n3 [label="{3|n2}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n2
//   n5 -> n4
//   n4 -> n3
//   n3 -> n2
//   secondToLast -> null [color="red"]
//   last -> null [color="red"]
//   head -> n1; 
// }


// // 旧链表的最后一个节点连接到新链表的尾部
// // 也就是就链表的头节点连接到新链表的尾部
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|null}"]
//   n2 [label="{2|n1}"] [color="orange"]
//   n3 [label="{3|n2}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n2
//   n5 -> n4
//   n4 -> n3
//   n3 -> n2
//   n2 -> n1 [color="red"]
//   secondToLast -> null
//   last -> null
//   head -> n1; 
// }


// // 新插入的节点作为新链表的尾节点
// // 断开旧链表的头节点的连接
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   head [shape=ellipse];
//   newHead [shape=ellipse]
//   newTail [shape=ellipse]
//   secondToLast [shape=ellipse]
//   last [shape=ellipse]
//   n1 [label="{1|null}"]
//   n2 [label="{2|n1}"]
//   n3 [label="{3|n2}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   newTail -> n1 [color="red"]
//   n5 -> n4
//   n4 -> n3
//   n3 -> n2
//   n2 -> n1
//   secondToLast -> null
//   last -> null
//   head -> null [color="red"]
// }


// // 得到反转之后的新链表
// digraph link1{
//   rankdir=LR;
//   node [shape=record];
//   // head [shape=ellipse];
//   newHead [shape=ellipse]
//   // newTail [shape=ellipse]
//   // secondToLast [shape=ellipse]
//   // last [shape=ellipse]
//   n1 [label="{1|null}"]
//   n2 [label="{2|n1}"]
//   n3 [label="{3|n2}"]
//   n4 [label="{4|n3}"]
//   n5 [label="{5|n4}"]
//   newHead -> n5
//   // newTail -> n1 [color="red"]
//   n5 -> n4
//   n4 -> n3
//   n3 -> n2
//   n2 -> n1
//   // secondToLast -> null
//   // last -> null
//   // head -> null [color="red"]
// }











